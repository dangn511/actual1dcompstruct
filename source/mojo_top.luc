//I wrote this with enough caffeine to knock out a person in my blood
//Mom dad i love you
module mojo_top (
    input clk,              // 50MHz clock input
    input rst_n,            // reset button (at an active low)
    output led [8],         // eight different user controllable LEDs
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input cclk,             // configuration clock, AVR ready when high
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    
   
    
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8],     // DIP switches on IO Shield
    
    // Inputs and outputs are defined here. Outputs: a, b, and cin. Inputs: sum and cout.
    // pins are defined in constraints file custom.ucf
   
    input sum,
    input cout    
    
  ) { 
   
  sig rst;                  // a reset signal
  
  .clk(clk) {
    reset_conditioner reset_cond;
    .rst(rst) {
      fsm state = {BEGIN, PREIDLE, IDLE, TESTCASE1, TESTCASE2, TESTCASE3, TESTCASE4, TESTCASE5, TESTCASE6, TESTCASE7, TESTCASE8, TESTCASE9, TESTCASE10, POSTPROC, HALT1, HALT2};
      multi_seven_seg seg;
      stateCounter sc;
      dff val[16];
      dff digit1[4];
      dff digit2[4];
    dff scoref[16];
    dff rngCounter[16];
      
      
    }
    
    random_gen rng;
  }
  
  sig a[16];
  sig b[16];
  sig myCounter[1];
  sig alufn[6];
  sig alu[16];
   
  alu alumod; 
  
  always {
  
    reset_cond.in = ~rst_n;   // inputting a raw inverted reset signal
    rst = reset_cond.out;     // conditioned reset
    spi_channel = bzzzz;      // not using flags
    avr_rx = bz; 
    
    led = c{3b0, io_button};  // connect buttons to LEDs
    
    spi_miso = bz;            // not using SPI
                 // not using serial port
    
    // by default,segments will display:0000
    
    
    io_seg = seg.seg; // connecting the segments to the driver
    io_sel = ~seg.sel; // connecting the digit select to the driver
    
    a = 16b0000100000000000;  
    b = 0;
    alufn = 0;
    
    alumod.alufn = alufn;   //connecting alufn to input of module alu
    alumod.a = a;           //connecting a to input of module alu
    alumod.b = b;

    io_led[2:1] = c{{a[15:8]},{a[7:0]}}; 
    //io_led[0] = scoref.q[7:0];
    
    seg.values = {4h1, 4h2, digit2.q, digit1.q};
    
    
    if (io_dip[0][0] == 0 && io_dip[0][1] == 0) { //0-0 = easy
      myCounter = sc.inc_state1;
    } else if (io_dip[0][0] == 0 && io_dip[0][1] == 1) {//0-1 == med
      myCounter = sc.inc_state2;
    } else if (io_dip[0][0] == 1 && io_dip[0][1] == 1) { //1-0 = hard
      myCounter = sc.inc_state3;
    } else {
      myCounter = sc.inc_state2;
    }
        //WARNING!!!
        //HARDCODE INCOMING
        //MAY SALVATION BE GRANTED TO MY SOUL
        //THERE IS NO DIVINITY BUT GOD
        if (scoref.q == 16d0) 
          {digit1.d = 0;
          digit2.d = 0;}
        else if (scoref.q == 16d1) 
          {digit1.d = 1;
          digit2.d = 0;}
        else if (scoref.q == 16d2) 
          {digit1.d = 2;
          digit2.d = 0;}
        else if (scoref.q == 16d3) 
          {digit1.d = 3;
          digit2.d = 0;}
        else if (scoref.q == 16d4) 
          {digit1.d = 4;
          digit2.d = 0;}
        else if (scoref.q == 16d5) 
          {digit1.d = 5;
          digit2.d = 0;}
        else if (scoref.q == 16d6) 
          {digit1.d = 6;
          digit2.d = 0;}
        else if (scoref.q == 16d7) 
          {digit1.d = 7;
          digit2.d = 0;}
        else if (scoref.q == 16d8) 
          {digit1.d = 8;
          digit2.d = 0;}
        else if (scoref.q == 16d9) 
          {digit1.d = 9;
          digit2.d = 0;}
        else if (scoref.q == 16d10) 
          {digit1.d = 0;
          digit2.d = 1;}
        else if (scoref.q == 16d11) 
          {digit1.d = 1;
          digit2.d = 1;}
        else if (scoref.q == 16d12) 
          {digit1.d = 2;
          digit2.d = 1;}
        else if (scoref.q == 16d13) 
          {digit1.d = 3;
          digit2.d = 1;}
        else if (scoref.q == 16d14) 
          {digit1.d = 4;
          digit2.d = 1;}
        else if (scoref.q == 16d15) 
          {digit1.d = 5;
          digit2.d = 1;}
        else if (scoref.q == 16d16) 
          {digit1.d = 6;
          digit2.d = 1;}
        else if (scoref.q == 16d17) 
          {digit1.d = 7;
          digit2.d = 1;}
        else if (scoref.q == 16d18) 
          {digit1.d = 8;
          digit2.d = 1;}
        else if (scoref.q == 16d19) 
          {digit1.d = 9;
          digit2.d = 1;}
        else if (scoref.q == 16d20) 
          {digit1.d = 0;
          digit2.d = 2;}

        else if (scoref.q == 16d21) 
          {digit1.d = 1;
          digit2.d = 2;}
        else if (scoref.q == 16d22) 
          {digit1.d = 2;
          digit2.d = 2;}
        else if (scoref.q == 16d23) 
          {digit1.d = 3;
          digit2.d = 2;}
        else if (scoref.q == 16d24) 
          {digit1.d = 4;
          digit2.d = 2;}
        else if (scoref.q == 16d25) 
          {digit1.d = 5;
          digit2.d = 2;}
        else if (scoref.q == 16d26) 
          {digit1.d = 6;
          digit2.d = 2;}
        else if (scoref.q == 16d27) 
          {digit1.d = 7;
          digit2.d = 2;}
        else if (scoref.q == 16d28) 
          {digit1.d = 8;
          digit2.d = 2;}
        else if (scoref.q == 16d29) 
          {digit1.d = 9;
          digit2.d = 2;}


        else if (scoref.q == 16d30) 
          {digit1.d = 0;
          digit2.d = 3;}
        else if (scoref.q == 16d31) 
          {digit1.d = 1;
          digit2.d = 3;}
        else if (scoref.q == 16d32) 
          {digit1.d = 2;
          digit2.d = 3;}
        else if (scoref.q == 16d33) 
          {digit1.d = 3;
          digit2.d = 3;}
        else if (scoref.q == 16d34) 
          {digit1.d = 4;
          digit2.d = 3;}
        else if (scoref.q == 16d35) 
          {digit1.d = 5;
          digit2.d = 3;}
        else if (scoref.q == 16d36) 
          {digit1.d = 6;
          digit2.d = 3;}
        else if (scoref.q == 16d37) 
          {digit1.d = 7;
          digit2.d = 3;}
        else if (scoref.q == 16d38) 
          {digit1.d = 8;
          digit2.d = 3;}
        else if (scoref.q == 16d39) 
          {digit1.d = 9;
          digit2.d = 3;}

        else if (scoref.q == 16d40) 
          {digit1.d = 0;
          digit2.d = 4;}
        else if (scoref.q == 16d41) 
          {digit1.d = 1;
          digit2.d = 4;}
        else if (scoref.q == 16d42) 
          {digit1.d = 2;
          digit2.d = 4;}
        else if (scoref.q == 16d43) 
          {digit1.d = 3;
          digit2.d = 4;}
        else if (scoref.q == 16d44) 
          {digit1.d = 4;
          digit2.d = 4;}
        else if (scoref.q == 16d45) 
          {digit1.d = 5;
          digit2.d = 4;}
        else if (scoref.q == 16d46) 
          {digit1.d = 6;
          digit2.d = 4;}
        else if (scoref.q == 16d47) 
          {digit1.d = 7;
          digit2.d = 4;}
        else if (scoref.q == 16d48) 
          {digit1.d = 8;
          digit2.d = 4;}
        else if (scoref.q == 16d49) 
          {digit1.d = 9;
          digit2.d = 4;}

        else if (scoref.q == 16d50) 
          {digit1.d = 0;
          digit2.d = 5;}
        

    case (state.q) {
      state.BEGIN:
      
        
        if (io_button[1]) {
          state.d = state.PREIDLE;
        }
      
        //this is a dirty fix
      state.PREIDLE:
        
        if (myCounter == 1 && io_button[0] == 0) {
        
          state.d = state.IDLE;
        }
  
      state.IDLE:
        
        a = 16b0001010000000000;
        //if (myCounter == 1)
        if (io_button[0]) {
          state.d = state.POSTPROC;
          }
        if (rng.num < 16h1)
        { rngCounter.d = rngCounter.q + 1;
        if (rngCounter.q == 4000) {
           
          state.d = state.TESTCASE1;
        } else {
          state.d = state.IDLE;
        }
        }
        
      
      // TEST CASE 1 : 000
      state.TESTCASE1:
      
        a = 16b0000000000000001;
        if (myCounter == 1)
        { if (io_button[0]) {
          alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 10;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE2;
        }
        }
           
        
        if (rst_n == 0) {
          state.d = state.IDLE;
        }

   
      // TEST CASE 2: score2
      state.TESTCASE2:
        a = 16b0000000000000010;
        if (myCounter == 1)
        { if (io_button[0]) {
          alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 9;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE3;
        }
        }
        
      // TEST CASE 3: 010
      state.TESTCASE3:
        a = 16b0000000000000100;
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 8;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE4;
        }
        }
        
      // TEST CSE 4: 011 
      state.TESTCASE4:
        a = 16b0000000000001000;
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 7;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE5;
        }
        }
     
      // TEST CASE 5: 100
      state.TESTCASE5:
        a = 16b0000000000010000;
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 6;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE6;
        }
        }
        
       
        
     
      // TEST CASE 6: 101
      state.TESTCASE6:
       a = 16b0000000000100000;
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 5;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE7;
        }
        }
        
      // TEST CASE 7: 110
      state.TESTCASE7:
        a = 16b0000000001000000;
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 4;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE8;
        }
        }
        
      // TEST CASE 8: 111
      state.TESTCASE8:
        a = 16b0000000010000000;
        if (myCounter== 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 3;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE9;
        }
        }
      
       state.TESTCASE9:
        a = 16b0000000100000000;
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 2;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.TESTCASE10;
        }
        }
        
        state.TESTCASE10:
        a = 16b0000001000000000;
        
        if (myCounter == 1)
        {if (io_button[0]) {
        alumod.alufn = 6b0;
            alumod.a = scoref.q;
            alumod.b = 1;
            scoref.d = alumod.alu;
          state.d = state.POSTPROC;
          } else {
          state.d = state.POSTPROC;
        }
        }
        
      state.POSTPROC:
      
        if (myCounter == 1) {
        val.d = val.q + 1;
          //alumod.alufn = 6b0;
          //alumod.a = val.q;
          //alumod.b = 1;
          //val.d = alumod.alu;
          
          alumod.alufn = 6b110011; //CMPE
          alumod.a = val.q;
          alumod.b = 4;
          
 
        if (alumod.alu) {
          state.d = state.HALT1;
          
        } else {
          rngCounter.d = 0;
          state.d = state.PREIDLE;
        }
        }
        
      state.HALT1:
        a = 16b0000001111111111;
        
        if (io_button[2]) {
          val.d = 0;
          scoref.d = 0;
          rngCounter.d = 0;
          state.d = state.BEGIN;
        }
        
        
      }
    io_led[2:1] = c{{a[15:8]},{a[7:0]}}; 
    io_led[0] = c{val.q[7:0]};
    seg.values = {digit1.q, digit2.q, 4d10, 4d10};
    }
}