module multi_seven_seg #(
    DIGITS = 4 : DIGITS > 0,
    TIME = 18 : TIME > 0
  )(
    input clk,                // clock
    input rst,                // reset
    input values [DIGITS][4], // values to show
    output seg [7],           // LED segments
    output sel [DIGITS]       // Digit select
    
  ) {
  
  seven_seg seg_dec;                      // segment decoder
  decoder decode(#WIDTH(2));
  
  .clk(clk), .rst(rst) {
    counter c(#SIZE(TIME));
    dff sel_val[2];  // index of values to output
    dff sel_out[4];
  }
  
  always {
    seg_dec.char = values[sel_val.q];     // select the value for the active digit
    seg = seg_dec.segs;                   // output the decoded value
    
    decode.in = sel_val.q;
    sel_out.d = decode.out;
    sel = sel_out.q;                  // output the active digit
    
    if (&c.value) {
      if (sel_val.q == DIGITS) {
        sel_val.d = 0;
      } else {
        sel_val.d = sel_val.q + 1;
      }
    }
  }
}